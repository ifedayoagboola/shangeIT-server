// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev --name UpdateUsersTable
// npx prisma studio
// CTRL + SHIFT + P then type: restart TS Server

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role{
  ADMIN
  USER
}
enum VerificationStatus{
  PENDING
  VERIFIED
  REJECTED
}
enum Currency{
  CAN
  GBP
  USD
  NIG
  EUR
}
enum TransactionStatus{
  PENDING
  SUCCESS
  REJECTED
  FAILED
}


model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role Role @default(USER)
  address String?
  country String?
  postcode String?
  dob String?
  phone String?
  documentType String?
  documentNumber String?
  verificationStatus VerificationStatus @default(PENDING) @unique

  offers Offer[]
  wallets Wallet[]
  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Offer {
  id Int @id @default(autoincrement())
  userId Int @default(0)
  user User @relation(fields: [userId], references: [id])
  fromCurrency String
  toCurrency String
  rate Decimal
  amount Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("offers")
}

model Wallet {
  id Int @id @default(autoincrement())
  userId Int @default(0)
  user User @relation(fields: [userId], references: [id])
  currency Currency @default(NIG)
  accountNumber Int
  balance Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("wallets")
}

model Transaction {
  id Int @id @default(autoincrement())
  userId Int @default(0)
  amount Decimal
  sender String
  receiver String
  reference String
  type String
  status String
  createdAt DateTime
  updatedAt DateTime

  @@map("transactions")
}

model Account {
  id Int @id @default(autoincrement())
  userId Int
  accountBalance Decimal
  accountNumber Int @unique
  accountId Int @unique
  pinNumber String @unique
  currency String
  userIsVerified VerificationStatus @default(PENDING)
  user User @relation(fields: [userIsVerified], references: [verificationStatus])

  createdAt DateTime
  updatedAt DateTime

  @@map("accounts")
}

